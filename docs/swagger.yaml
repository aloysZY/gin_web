definitions:
  app.Pager:
    properties:
      page:
        description: 页码
        type: integer
      page_size:
        description: 每页数量
        type: integer
      total_rows:
        description: 总行数
        type: integer
    type: object
  errcode.Error:
    type: object
  model.ArticleTag:
    properties:
      article_id:
        description: 设置 tagID  string解决json解析的时候使用这个类型，解决前端传入和传入前端失真
        type: integer
      content:
        description: 文章内容
        type: string
      cover_image_url:
        description: 封面图片地址
        type: string
      created_on:
        description: 创建时间 ，自动获取提交时间
        type: integer
      desc:
        description: 文章简述
        type: string
      modified_on:
        description: 修改时间，自动获取提交时间
        type: integer
      name:
        description: 文章标题
        type: string
      tag_name:
        description: 这里可以设置，如果为空就不返回这列，跟前端协商
        items:
          type: string
        type: array
      user_name:
        items:
          type: string
        type: array
    type: object
  model.Tag:
    properties:
      created_on:
        description: 创建时间 ，自动获取提交时间
        type: integer
      modified_on:
        description: 修改时间，自动获取提交时间
        type: integer
      name:
        description: 名称
        type: string
      tag_id:
        description: 设置 tagID  string解决json解析的时候使用这个类型，解决前端传入和传入前端失真
        example: "0"
        type: string
    type: object
  params.AuthRequest:
    properties:
      app_key:
        description: UserName  string `json:"user_name" from:"user_name" binding:"required,min=2,max=20"`
        type: string
      app_secret:
        maxLength: 20
        minLength: 5
        type: string
    required:
    - app_key
    - app_secret
    type: object
  params.CreateArticleRequest:
    properties:
      content:
        description: 文章内容
        maxLength: 4294967295
        minLength: 2
        type: string
      cover_image_url:
        description: 文章封面
        type: string
      desc:
        description: 文章描述
        maxLength: 255
        minLength: 2
        type: string
      state:
        enum:
        - 0
        - 1
        example: 1
        type: integer
      tag_id:
        description: 标签 ID,创建文章可以不设置标签 omitempty 为空不显示
        example: "0"
        type: string
      title:
        description: 文章标题
        maxLength: 100
        minLength: 2
        type: string
    required:
    - content
    - cover_image_url
    - desc
    - title
    type: object
  params.CreateTagRequest:
    properties:
      name:
        description: 名称；min 和 max 限制的是长度 2-100
        maxLength: 100
        minLength: 2
        type: string
      state:
        description: |-
          from是将传入的参数和结构体进行绑定，但是名称中有"_"的时候存在问题，可以设置json来解决
          https://juejin.cn/post/7005465902804123679
          example:"1"  swagger tag 设置默认值
        enum:
        - 0
        - 1
        example: 1
        type: integer
    required:
    - name
    type: object
  params.SignUpRequest:
    properties:
      app_key:
        type: string
      app_secret:
        maxLength: 20
        minLength: 5
        type: string
      user_name:
        maxLength: 20
        minLength: 2
        type: string
    required:
    - app_key
    - app_secret
    - user_name
    type: object
  params.UpdateTagRequest:
    properties:
      state:
        description: 状态；可以更新状态为不可用，需要传入
        enum:
        - 0
        - 1
        example: 1
        type: integer
    type: object
  third_party.Swagger:
    type: object
  third_party.SwaggerArticle:
    properties:
      list:
        items:
          $ref: '#/definitions/model.ArticleTag'
        type: array
      page:
        $ref: '#/definitions/app.Pager'
    type: object
  third_party.SwaggerAuth:
    type: object
  third_party.SwaggerTage:
    properties:
      list:
        items:
          $ref: '#/definitions/model.Tag'
        type: array
      page:
        $ref: '#/definitions/app.Pager'
    type: object
info:
  contact: {}
  description: 练习 Gin 写 web 服务
  termsOfService: https://github.com/aloysZY/gin_web
  title: gin_web
  version: "1.0"
paths:
  /api/v1/articles:
    get:
      description: 查询文章 支持文章名称模糊查找
      parameters:
      - description: 文章标题
        in: query
        maxLength: 100
        name: title
        type: string
      - default: 1
        description: 状态
        enum:
        - 0
        - 1
        in: query
        name: state
        type: integer
      - description: 页码
        in: query
        name: page
        type: integer
      - description: 每页数量
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/third_party.SwaggerArticle'
        "400":
          description: 请求错误
          schema:
            $ref: '#/definitions/errcode.Error'
        "500":
          description: 内部错误
          schema:
            $ref: '#/definitions/errcode.Error'
      security:
      - ApiKeyAuth: []
      summary: 查询文章
      tags:
      - 文章
    post:
      description: 创建文章接口
      parameters:
      - description: 创建标签
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/params.CreateArticleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/third_party.Swagger'
        "400":
          description: 请求错误
          schema:
            $ref: '#/definitions/errcode.Error'
        "500":
          description: 内部错误
          schema:
            $ref: '#/definitions/errcode.Error'
      security:
      - ApiKeyAuth: []
      summary: 创建文章
      tags:
      - 文章
  /api/v1/tags:
    get:
      description: 查询标签
      parameters:
      - description: 标签名称
        in: query
        maxLength: 100
        name: name
        type: string
      - default: 1
        description: 状态
        enum:
        - 0
        - 1
        in: query
        name: state
        type: integer
      - description: 页码
        in: query
        name: page
        type: integer
      - description: 每页数量
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/third_party.SwaggerTage'
        "400":
          description: 请求错误
          schema:
            $ref: '#/definitions/errcode.Error'
        "500":
          description: 内部错误
          schema:
            $ref: '#/definitions/errcode.Error'
      security:
      - ApiKeyAuth: []
      summary: 查询标签
      tags:
      - 标签
    post:
      description: 添加标签接口
      parameters:
      - description: 创建标签
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/params.CreateTagRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/third_party.Swagger'
        "400":
          description: 请求错误
          schema:
            $ref: '#/definitions/errcode.Error'
        "500":
          description: 内部错误
          schema:
            $ref: '#/definitions/errcode.Error'
      security:
      - ApiKeyAuth: []
      summary: 添加标签
      tags:
      - 标签
  /api/v1/tags/{id}:
    delete:
      description: 删除标签
      parameters:
      - description: 标签ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/third_party.Swagger'
        "400":
          description: 请求错误
          schema:
            $ref: '#/definitions/errcode.Error'
        "500":
          description: 内部错误
          schema:
            $ref: '#/definitions/errcode.Error'
      security:
      - ApiKeyAuth: []
      summary: 删除标签
      tags:
      - 标签
    put:
      description: 更新标签接口
      parameters:
      - description: 标签ID
        in: path
        name: id
        required: true
        type: integer
      - description: 更新标签
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/params.UpdateTagRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/third_party.Swagger'
        "400":
          description: 请求错误
          schema:
            $ref: '#/definitions/errcode.Error'
        "500":
          description: 内部错误
          schema:
            $ref: '#/definitions/errcode.Error'
      security:
      - ApiKeyAuth: []
      summary: 更新标签
      tags:
      - 标签
  /auth:
    post:
      description: 登录接口
      parameters:
      - description: 用户登录
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/params.AuthRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/third_party.SwaggerAuth'
        "400":
          description: 请求错误
          schema:
            $ref: '#/definitions/errcode.Error'
        "500":
          description: 内部错误
          schema:
            $ref: '#/definitions/errcode.Error'
      summary: 登录
      tags:
      - 用户
  /signup:
    post:
      description: 注册接口
      parameters:
      - description: 注册用户
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/params.SignUpRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/third_party.Swagger'
        "400":
          description: 请求错误
          schema:
            $ref: '#/definitions/errcode.Error'
        "500":
          description: 内部错误
          schema:
            $ref: '#/definitions/errcode.Error'
      summary: 注册
      tags:
      - 用户
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
